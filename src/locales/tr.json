{
    "carouselFirstTextFirst": "Azimli, Hırslı ve Sakar bir yazılımcıyım :)",
    "carouselFirstTextSecond": "Kendimi kısaca; kendini geliştiren, yeni şeyler öğrenmekten korkmayan, hayata pozitif bakmaya çalışan birisi olarak nitelendirebilirim.",
    "carouselSecondTextFirst": "Azimli, Hırslı ve Sakar bir yazılımcıyım :)",
    "carouselSecondTextSecond": "Kendimi kısaca; kendini geliştiren, yeni şeyler öğrenmekten korkmayan, hayata pozitif bakmaya çalışan birisi olarak nitelendirebilirim.",
    "aboutMe": "BENİM HAKKIMDA",
    "whoAmI": "Ben KİMİM?",
    "mySkills": "Yeteneklerim",
    "abilityDescription": "Size kısaca kendimi takdim edeyim. Adım Oğuzhan, 30 Temmuz 1997 Denizli doğumluyum. Sakarya Üniversitesi Yönetim Bilişim Sistemleri bölümünden 2020 yılında mezun oldum. Kariyerime şuan da Software Developer olarak devam ediyorum. Yazılım alanında ilk deneyimim olan staj süresince Backend dediğimiz kısımda görev aldım. Mezun olduktan sonra ise ilk iş deneyimimi Frontend Developer olarak gerçekleştirdim. Şuan da her iki alanda da (ağırlıklı olarak Frontend Developer) çalışıyorum. Hedefim; mobil alanına girip yeni bilgiler edinmek, bildiğim teknolojiler de kendimi geliştirmek ve eğitim anlamında Master yapmak diyebilirim.",
    "homePage": "Ana Sayfa",
    "about": "Hakkımda",
    "experiences": "Deneyimler",
    "projects": "Projeler",
    "november": "Kasım",
    "february": "Şubat",
    "october": "Ekim",
    "april": "Nisan",
    "march": "Mart",
    "december": "Aralık",
    "pages": "Sayfalar",
    "communication": "İletişim",
    "allRights": "Tüm Hakları Saklıdır",
    "downloadCV" : "CV İndir",
    "goToGithubRepo": "Github Reposuna Git",
    "atlastekComment": "Atlastek bünyesinde Frontend geliştirici olarak UTTS, KMTS, İDİS ve DBYS projelerinde yer aldım. UTTS projesinde React kullanarak geliştirmeler yaptım. KMTS ve İDİS projesinde Vue.js, Vuex, Router, PrimeVue kullanarak sıfırdan admin ve kullanıcı taraflı, kullanıcı kimlik doğrulaması olan portal geliştirdim. İDİS projesi için içerisinde dil desteği bulunan web sitesi oluşturdum. DBYS projesinde ASP.NET kullanarak ön yüzde geliştirmeler yaptım. ",
    "huaweiComment": "Huawei'de işe başladıktan sonra AppCube takımında görev aldım. AppCube platformun da hem Backend hem de Frontend olarak projenin ve görevlerin ihtiyaçlarına göre geliştirmeler yaptım. Appcube platformunda çoğunlukla Vue.JS kullanarak hem Huawei içi hem de ulusal kurumsal dışı projeler de yer aldım.",
    "desecureComment": "Mezun olduktan sonra Desecure Özel Güvenlik firmasında Jr. Frontend Developer olarak görev aldım. Burada firma içerisindeki kurumlara Html, Css, Sass, Bootstrap, Javascript, Gulp.js teknolojilerini kullanarak web siteleri hazırladım. Firma dışarısından gelen projelerde Wordpress kullanarak geliştirmeler yaptım. Vue.JS kullanarak bir SPA projesi oluşturulmasında görev aldım.",
    "binoplusComment": "Yönetim Bilişim Sistemleri bölümümün 7+1'lik stajını, Sakarya Üniversitesi Teknokentinde bulunan Binoplus+ Yazılım Geliştirme Firmasında yaptım. Staj boyunca çoğunlukla web projeleri üzerinde Backend rolünde görev aldım ve Staj boyunca çoğunlukla C#, Asp.Net MVC, Asp.Net Core, Git, MSSQL, Entity Framework teknolojilerini kullandım.",
    "rentACarProjectFE": "Rent a Car Projesi (Frontend)",
    "rentACarProjectFEDescription": "Bu projenin Frontend tarafında Angular framework'u kullanılmıştır. Backend tarafından gelen API isteklerini karşılamak için Services klasörü altında Http Client kullanarak servis işlemleri yazılmıştır. Proje SPA olarak oluşturulduğu için Route yapısı Routing Module altında oluşturulmuştur. Gelen istekleri sayfalarda göstermek için components klasörü altında sayfalar oluşturulmuştur. Interceptor altında her istekte token gönderimi sağlanmıştır. Guards işlemi ile kullanıcının sisteme girip girmediği kontrol edilmiş, eğer sisteme girmemiş ise login sayfasına yönlendirme işlemi yapılmıştır.",
    "rentACarProjectBE": "Rent a Car Projesi (Backend)",
    "rentACarProjectBEDescription": "Bu projenin backend tarafında C# dili ve .Net Core teknolojisi kullanılmıştır. Proje katmanlı mimari tekniğine göre oluşturulmuştur. Entities katmanında veritabanına karşılık olarak gelecek varlıklar oluşturulmuştur. DataAccess katmanında entities katmanındaki varlıkların veritabanlarına bağlanması için gerekli kodlamalar yapılmıştır. ORM olarak Entity Framework kullanılmıştır. Proje SOLID prensiplerine göre oluşturulduğu için veritabanı değişikliğine kolay adapte olabilecek niteliktedir. Business katmanında gerekli iş kodları yazılmıştır. Web api katmanına ise api tarafı kodlanmıştır.",
    "employeeTrackingProject": "Çalışan Takip Projesi",
    "employeeTrackingProjectDescription": "Asp.Net Core teknolojisini kullanarak yaptığım bir proje. İçinde kayıt olma işlemi, giriş-çıkış işlemleri, roller ve claimler gibi işlemler var. Projeye Facebook, Google gibi harici yerlerden de kayıt olunabiliyor ve giriş yapılabiliyor. Kayıt olan birisinin veritabanında emaili eğer varsa 'Aynı email var' hatası veriyor. Kayıt olan kullanıcı, şifre oluştururken bir de onaylama şifresi girmesi gerekiyor. Uygulama, şifrelerin aynı olup olmadığını kontrol ediyor ve aynı değilse hata mesajı veriyor. Kullanıcı kayıt olduktan sonra emailine, emailini onaylama linki gönderiyor. Emailini onaylamadan giriş yapamıyor. Emailini onayladıktan sonra giriş yapabiliyor. Giriş kısmında, şifresini unutan kullanıcılar için bir şifre sıfırlama metni mevcut. Buna tıklayan kullanıcıların daha önce onayladıkları email adresine, token vasıtasıyla şifre sıfırlama linki gönderiliyor ve bu linke tıklayan kullanıcı yeni şifre belirleme ekranına yönlendiriliyor. Kullanıcı, buradan yeni şifresini ve onaylama şifresini yazarak şifresini oluşturabiliyor. Ayrıca, sisteme giren kullanıcıların şifresini değiştirebileceği bir sayfa da var. Ancak şifre sıfırlamadan farklı olarak bu sayfada eski şifresini de girmesi gerekiyor. Projenin ana sayfasında çalışanları gösteren bir liste var. Roller kısmında, listeyi herkesin görebileceği şekilde 'allow anonymous' olarak ayarladım. Ancak çalışanların detaylarını görmek isteyen birisinin sisteme girmesi gerekiyor. Sisteme girmeyen bir kullanıcı bu butona tıklarsa login sayfasına yönlendiriliyor. Çalışan ekleme, çalışan bilgilerini düzenleme veya silme işlemlerini sadece 'user' rolüne sahip yetkililer yapabiliyor. Sisteme girmiş ve 'user' yetkisi olmayan birisi bu işlemleri yapmaya çalışınca hata sayfası gösteriliyor. 'User' rolü dışında bir de 'admin' rolü mevcut. Admin rolü, yeni rol ekleme, silme, önceki rollere yeni kişiler ekleme veya yetkisi olan birisinin rolünü kaldırma gibi işlemleri yapabiliyor.",
    "stockTrackingProject": "Stok Takip Projesi",
    "stockTrackingProjectDescription": "C# MVC teknolojisini öğrenmek için yaptığım ve geliştirdiğim bir projedir. Projede ilk olarak bir layout kısmı yer almaktadır. Bu kısımda Kategoriler, Ürünler, Müşteriler, Satışlar ve Yardım kısmı yer almaktadır. Kategoriler kısmında yeni kategori ekleme, kategorileri listeleme, güncelleme ve silme butonu vardır. Ürünler ve Müşteriler kısmında da ekleme, silme, düzenleme ve listeleme işlemleri yapılabilmektedir. Satışlar kısmında ise satış işlemini veri tabanımızdaki müşterilerden seçip, stokta olan ürünü seçip satış işlemini gerçekleştirebiliriz.",
    "foodSiteProject": "Yemek Sitesi",
    "foodSiteProjectDescription": "Asp.Net öğrenmek için bir kursta yaptığım projedir. Projede hem kullanıcılar için hem de admin tarafında gerekli düzenlemelerin yapılması için 2 farklı sayfa vardır. Kullanıcı kısmında bir master page bulunmaktadır ve bu kısımda Ana Sayfa, Günün Yemeği, Tarif Öner, Hakkımızda ve İletişim bölümleri yer almaktadır. Ayrıca yan kısımda Kategoriler bölümü bulunmaktadır. Kategoriler yemek kategorilerine göre ayrılmış ve yanında o kategorideki yemek sayısı belirtilmiştir. Ana Sayfa kısmında bütün yemekler alt alta sıralanmakta, Günün Yemeği bölümünde admin tarafından belirlenen yemek yer almaktadır. Yemek Öner kısmında kullanıcılar yemek önerisinde bulunabilir, ancak önerilen yemekler önce admin onayına düşmekte ve onaylanınca Ana Sayfa'ya eklenmektedir. Hakkımızda kısmında proje ile ilgili bilgiler bulunmakta, İletişim kısmında ise kullanıcılar mesajlarını iletebilmektedir. Ayrıca Ana Sayfa'daki yemeklerin üzerine tıklayınca, yemeğe ait yorumlar görüntülenebilmekte ve bu yorumlar admin onayına sunulmaktadır. Admin tarafında kategorileri düzenleme ve silme, yemekleri onaylama, silme ve düzenleme, yemeğe ait yapılan yorumları onaylama veya silme, ve Günün Yemeğini belirleme işlemleri yapılabilmektedir.",
    "faultMaintenanceSystemProject": "Arıza Bakım Sistemi",
    "faultMaintenanceSystemProjectDescription": "Kurumsal Kaynak Planlaması adlı dersimde yapmış olduğum projedir. Projeyi 5 kişiden oluşan grubumla Visual Studio'da MSSQL'den veri akışı şeklinde gerçekleştirdik. Projede 2 farklı sistem girişi bulunmaktadır: Operatör girişiyle Tezgah, Bakım Sebebi, Arızayı Bildiren Operatör, Arıza Seviyesi ve Talep Tarihi bilgileri MSSQL'e kaydedilirken aynı zamanda talepler silinebilir. Bakımcı girişi ise kullanıcı adı ve şifreyle yapılır. Operatörün girdiği talep numarasına göre bilgiler görüntülenir, bakımcı parçaların adetlerini seçerek hesaplama yapabilir, başlangıç ve bitiş tarihine göre duraksama gün sayısı ve ceza ücretini hesaplayabilir. Ortak Rapor Ekranı üzerinden Operatörler ve Bakımcılar; Açık Olan Bakım Taleplerini, Tamamlanmış Bakımları, Preshane ve Yedek Parçaları görüntüleyebilirler, ancak yetki kısıtlaması durumunda 'Bu raporu görüntülemek için yetkiniz yoktur' hatası döndürülür.",
    "toDoListProject": "To Do List",
    "toDoListProjectDescription": "Vue.JS öğrenmeye başladığımda yaptığım ilk proje. Biraz basit olsa da öğrendiklerimi kavrama yolumda attığım her adımın önemli olduğunu düşünüyorum. Projenin tasarımları üzerine çok uğraşmadım ama daha sonra tasarımını güzelleştirmeyi düşünüyorum. Projeyi tek bir component üzerinden olmak üzere yaptım."
}