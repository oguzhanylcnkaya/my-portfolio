{
  "carouselFirstTextFirst": "I am a determined, ambitious and clumsy software developer :)",
  "carouselFirstTextSecond": "Myself briefly; I can describe him as a person who develops himself, is not afraid of learning new things, and tries to have a positive outlook on life.",
  "carouselSecondTextFirst": "I am a determined, ambitious and clumsy software developer :)",
  "carouselSecondTextSecond": "Myself briefly; I can describe him as a person who develops himself, is not afraid of learning new things, and tries to have a positive outlook on life.",
  "aboutMe": "ABOUT ME",
  "whoAmI": "WHO AM I?",
  "mySkills": "My Skills",
  "abilityDescription": "Let me briefly introduce myself to you. My name is Oğuzhan, I was born on 30 July 1997 in Denizli. I graduated from Sakarya University, Department of Management Information Systems in 2020. I am currently continuing my career as a Software Developer. During my internship, which is my first experience in software, I took part in the part we call Backend. After graduation, I had my first work experience as a Frontend Developer. I am currently working in both areas (mainly Frontend Developer). My goal; I can say that by entering the field of mobile, gaining new information, improving myself in the technologies I know and doing a Master in education.",
  "homePage": "Home Page",
  "about": "About Me",
  "experiences": "Experiences",
  "projects": "Projects",
  "november": "November",
  "february": "February",
  "october": "October",
  "april": "April",
  "march": "March",
  "december": "December",
  "pages": "Pages",
  "communication": "Communication",
  "allRights": "All rights reserved",
  "downloadCV" : "Download CV",
  "goToGithubRepo": "Go to Github Repo",
  "atlastekComment": "Contributed as a Frontend Developer in UTTS, KMTS, İDİS, and DBYS projects. Developed features for the UTTS project using React. Built user and admin portals for KMTS and İDİS projects using Vue.js, Vuex, Router, and PrimeVue with user authentication. Created a multilingual website for the İDİS project. Worked on the frontend side of the DBYS project using ASP.NET.",
  "huaweiComment": "Worked in the AppCube team as both Backend and Frontend Developer. Developed solutions based on project needs, with a strong focus on Vue.js. Participated in internal Huawei projects as well as enterprise-level external projects.",
  "desecureComment": "Started as a Junior Frontend Developer after graduation. Designed and developed websites for internal clients using HTML, CSS, SASS, Bootstrap, JavaScript, and Gulp.js. Worked on external projects using WordPress. Contributed to the creation of a Single Page Application (SPA) project using Vue.js.",
  "binoplusComment": "I did my 7+1 internship of my Management Information Systems department at Binoplus+ Software Development Company in Sakarya University Technocity. During the internship, I mostly worked on web projects in the role of Backend and during the internship, I mostly used C#, Asp.Net MVC, Asp.Net Core, Git, MSSQL, Entity Framework technologies.",
  "rentACarProjectFE": "Rent a Car Project (Frontend)",
  "rentACarProjectFEDescription": "In this project, the Angular framework was used on the frontend side. To handle API requests from the backend, service operations were written using Http Client under the Services folder. Since the project was built as an SPA, the Route structure was created under the Routing Module. Pages were created under the components folder to display incoming requests on the pages. Token transmission was ensured in every request under the Interceptor. User access was controlled with Guards, and if the user was not logged into the system, they were redirected to the login page.",
  "rentACarProjectBE": "Rent a Car Project (Backend)",
  "rentACarProjectBEDescription": "The backend of this project was developed using the C# language and .Net Core technology. The project was designed based on a layered architecture approach. In the Entities layer, entities corresponding to the database were created. In the DataAccess layer, the necessary coding was done to connect the entities in the Entities layer to the databases. Entity Framework was used as the ORM. Since the project was built according to SOLID principles, it is easily adaptable to database changes. The necessary business logic was implemented in the Business layer, while the API side was coded in the Web API layer.",
  "employeeTrackingProject": "Employee Tracking Project",
  "employeeTrackingProjectDescription": "This is a project I developed using Asp.Net Core technology. It includes processes like user registration, login/logout, roles, and claims. Users can also register and log in via external providers like Facebook and Google. If the email of a registered user already exists in the database, an 'Email already exists' error is returned. During registration, users must enter a password confirmation alongside their password. The application checks if the passwords match and displays an error message if they do not. After registration, a confirmation link is sent to the user's email. The user cannot log in until they verify their email. Once the email is confirmed, they can successfully log in. For users who forget their passwords, there is a password reset option on the login page. A reset link is sent to their verified email address via a token, and clicking the link redirects them to a page where they can set a new password and confirmation password. Additionally, there is a page where logged-in users can change their password. However, unlike the reset process, they must also provide their old password on this page. The homepage displays a list of employees. I configured the roles so that the list is visible to everyone with 'allow anonymous' access. However, to view employee details, the user must log in. If a non-logged-in user clicks the button to view details, they are redirected to the login page. Only users with the 'user' role can add, edit, or delete employee information. If someone without the 'user' role attempts these actions, they are shown an error page. Besides the 'user' role, there is also an 'admin' role. Admins can perform tasks like adding, deleting, or assigning roles to others or removing roles from users with permissions.",
  "stockTrackingProject": "Stock Tracking Project",
  "stockTrackingProjectDescription": "This is a project I developed to learn and improve my skills in C# MVC technology. The project includes a layout section, which contains Categories, Products, Customers, Sales, and Help sections. In the Categories section, you can add new categories, list, update, and delete them. Similarly, in the Products and Customers sections, you can perform operations such as adding, deleting, editing, and listing. In the Sales section, you can complete a sales transaction by selecting a customer from the database and a product available in stock.",
  "foodSiteProject": "Food Site",
  "foodSiteProjectDescription": "This is a project I developed during a course to learn Asp.Net. The project includes two different pages: one for users and one for the admin to make necessary adjustments. On the user side, there is a master page with sections such as Home Page, Today's Dish, Suggest a Recipe, About Us, and Contact. Additionally, there is a sidebar with a Categories section where dishes are grouped by categories, and the number of dishes in each category is displayed. On the Home Page, all dishes are listed, and in the Today's Dish section, the dish selected by the admin is displayed. In the Suggest a Recipe section, users can suggest dishes, but these suggestions first go to the admin for approval and are added to the Home Page after approval. The About Us section contains information about the project, and the Contact section allows users to send messages. Clicking on a dish on the Home Page shows the comments for that dish, which also require admin approval. On the admin side, there are options to edit and delete categories, approve, delete, and edit dishes, manage comments for dishes, and select the dish of the day.",
  "faultMaintenanceSystemProject": "Fault Maintenance System",
  "faultMaintenanceSystemProjectDescription": "This is a project I completed in my Enterprise Resource Planning course with a team of 5 members. We developed the project in Visual Studio using data flow from MSSQL. The project includes two different system logins: Operators can enter details such as Machine, Maintenance Reason, Reporting Operator, Fault Level, and Request Date, which are saved to MSSQL, and they can also delete requests. Maintenance personnel log in with a username and password, view details based on the request number entered by the operator, select parts and quantities, and calculate the total cost using a button. They can also calculate penalty fees based on the number of downtime days by entering start and end dates. Through the Shared Report Screen, both Operators and Maintenance Personnel can view Open Maintenance Requests, Completed Maintenances, Press Shops, and Spare Parts. However, if they lack the necessary permissions, an error message stating 'You do not have permission to view this report' is displayed.",
  "toDoListProject": "To Do List",
  "toDoListProjectDescription": "This is the first project I created when I started learning Vue.JS. Although it's a bit simple, I believe every step I take in understanding what I've learned is important. I didn't focus much on the design of the project, but I plan to improve it later. I built the project using a single component."
}